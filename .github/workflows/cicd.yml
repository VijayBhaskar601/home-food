name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  pre-checks:
    name: Pre-request Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Pre-request Checks
        run: echo "Running pre-request checks..."

  helm:
    name: Run Helm Chart
    needs: pre-checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Run Helm Lint
        run: helm lint path/to/helm-chart

  pytest:
    name: Run Pytest
    needs: pre-checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Pytest
        run: pytest tests/ --disable-warnings --maxfail=3

  build:
    name: Build Application
    needs: [helm, pytest]  # Waits for both Helm and Pytest to finish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker build -t my-python-app .

  test:
    name: Post-Build Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Pytest Again
        run: pytest tests/ --disable-warnings --maxfail=3

  stage:
    name: Staging Deployment
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Staging
        run: echo "Deploying to staging environment..."

  deploy:
    name: Production Deployment
    needs: stage
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production
        run: echo "Deploying to production environment..."
